# "group:name:version:classifier@extension"
# For the given regular declaration:
# dependencies {
#     implementation "com.mygroup:my-artifact:1.0.0:debug@aar"
# }
# In `TOML`
# [libraries]
# myDependency = { module = "com.mygroup:my-artifact", version = "1.0.0" }
# In `build.gradle.kts`
# dependencies {
#     implementation(libs.myDependency) {
#         artifact {
#             classifier = 'debug'
#             type = 'aar'
#         }
#     }
# }

[versions]
#===================
#===== Project =====
#===================
# @keep
compile-sdk = "33"
# @keep
min-sdk = "23"
# @keep
target-sdk = "33"
# @keep
ndk-sdk = "25.2.9519653"

# @keep
versionCode = "1"
# @keep
versionName = "1.0.0"

leo-version = "5.12.9"

#===================
#===== Compile =====
#===================
agp = "8.0.2"
kotlin = "1.8.21"

#=================================
#===== Android dependencies ======
#=================================
material = "1.9.0"
activity-ktx = "1.5.1"
fragment-ktx = "1.5.7"
coroutines = "1.7.1"
core-ktx = "1.10.1"
appcompat = "1.6.1"
annotation = "1.6.0"
constraintlayout = "2.1.4"
recyclerview = "1.3.0"
cardview = "1.0.0"
navigation = "2.5.3"
lifecycle = "2.6.1"
multidex = "2.0.1"

#=======================
#===== Third party =====
#=======================
detekt = "1.23.0"
dokka = "1.7.10"
ktlint = "0.48.2"
ktlint-gradle = "11.3.2"
benmanes = "0.46.0"
jacoco = "0.8.8"
sonarqube = "4.2.0.3129"
mars-xlog = "1.2.6"
karn-notify = "1.4.0"
xx-permissions = "16.2"
net = "3.5.1"

#================
#===== Test =====
#================
jupiter = "5.9.3" # JUnit 5
androidx-test = "1.5.0"
androidx-test-ext = "1.1.5"
androidx-test-runner = "1.5.2"
androidx-test-monitor = "1.6.1"
androidx-test-uiautomator = "2.2.0"
espresso-core = "3.5.1"
kluent = "1.73"
mockk = "1.13.5"
arch = "2.2.0"
powermock-version = "2.0.9"
robolectric-version = "4.9.2"
mannodermaus-android-junit5 = "1.9.3.0"
mannodermaus-junit5 = "1.3.0"

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[libraries]
#===================
#===== Compile =====
#===================
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kgp = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

#=========================
#===== Leo Libraries =====
#=========================
leo-androidbase = { module = "com.leovp.android:androidbase", version.ref = "leo-version" }
leo-pref = { module = "com.leovp.android:pref", version.ref = "leo-version" }
leo-basenetty = { module = "com.leovp.android:basenetty", version.ref = "leo-version" }
leo-floatview = { module = "com.leovp.android:floatview", version.ref = "leo-version" }
leo-audio = { module = "com.leovp.android:audio", version.ref = "leo-version" }
leo-adpcm-ima-qt-codec-h264-hevc-decoder = { module = "com.leovp.android:adpcm-ima-qt-codec-h264-hevc-decoder", version.ref = "leo-version" }
leo-opengl = { module = "com.leovp.android:opengl", version.ref = "leo-version" }
leo-draw-on-screen = { module = "com.leovp.android:drawonscreen", version.ref = "leo-version" }
leo-circle-progressbar = { module = "com.leovp.android:circleprogressbar", version.ref = "leo-version" }
leo-log = { module = "com.leovp.android:log", version.ref = "leo-version" }

leo-lib-network = { module = "com.leovp.android:lib-network", version.ref = "leo-version" }
leo-lib-compress = { module = "com.leovp.android:lib-compress", version.ref = "leo-version" }
leo-lib-reflection = { module = "com.leovp.android:lib-reflection", version.ref = "leo-version" }
leo-lib-json = { module = "com.leovp.android:lib-json", version.ref = "leo-version" }
leo-lib-bytes = { module = "com.leovp.android:lib-bytes", version.ref = "leo-version" }
leo-lib-image = { module = "com.leovp.android:lib-image", version.ref = "leo-version" }
leo-lib-common-android = { module = "com.leovp.android:lib-common-android", version.ref = "leo-version" }
leo-lib-common-kotlin = { module = "com.leovp.android:lib-common-kotlin", version.ref = "leo-version" }

#===================
#===== Android =====
#===================
android-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "activity-ktx" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }

#=============================
#===== Android Lifecycle =====
#=============================
# ViewModel
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
# LiveData
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
# optional - helpers for implementing LifecycleOwner in a Service
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
# Lifecycles only (without ViewModel or LiveData)
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
# Saved state module for ViewModel
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }

#=======================
#===== Third party =====
#=======================
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
# https://github.com/Kotlin/dokka
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
jacoco = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }
mars-xlog = { module = "com.tencent.mars:mars-xlog", version.ref = "mars-xlog" }
xx-permissions = { module = "com.github.getActivity:XXPermissions", version.ref = "xx-permissions" }
karn-notify = { module = "io.karn:notify", version.ref = "karn-notify" }
net = { module = "com.github.liangjingkanji:Net", version.ref = "net" }

#================
#===== Test =====
#================
# testImplementation
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
# testRuntimeOnly
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
# (Optional) If you need "Parameterized Tests"
# testImplementation
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
# testRuntimeOnly
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "jupiter" }
kotlin-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espresso-core" }
espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "espresso-core" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso-core" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-ext-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-ext" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "androidx-test-monitor" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx-test-uiautomator" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kluent-android = { module = "org.amshove.kluent:kluent-android", version.ref = "kluent" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
arch = { module = "androidx.arch.core:core-testing", version.ref = "arch" }
powermock-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock-version" }
powermock-core = { module = "org.powermock:powermock-core", version.ref = "powermock-version" }
powermock-api = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock-version" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric-version" }
# androidTestImplementation
mannodermaus-junit5-core = { module = "de.mannodermaus.junit5:android-test-core", version.ref = "mannodermaus-junit5" }
# androidTestRuntimeOnly
mannodermaus-junit5-runner = { module = "de.mannodermaus.junit5:android-test-runner", version.ref = "mannodermaus-junit5" }

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[bundles]
androidx-main = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-annotation",
    "androidx-constraintlayout",
    "androidx-recyclerview",
    "androidx-cardview",
    "androidx-fragment"
]
kotlin = ["kotlin-reflect", "kotlin-coroutines"]
navigation = ["androidx-navigation-fragment", "androidx-navigation-ui"]
lifecycle-full = [
    "lifecycle-viewmodel",
    "lifecycle-livedata",
    "lifecycle-service",
    "lifecycle-viewmodel-savedstate"
]
lifecycle-simple = [
    "lifecycle-viewmodel",
    "lifecycle-livedata"
]
test = [
    "kotlin-junit5",
    "junit-jupiter-api",
    "junit-jupiter-params",
    "mockk",
    "test-coroutines",
    "kluent-android",
    "arch",
    "robolectric"
]
android-test = [
    "androidx-test-core",
    "androidx-test-core-ktx",
    "androidx-test-runner",
    "androidx-test-ext-junit-ktx",
    "androidx-test-monitor",
    "androidx-test-uiautomator",
    "espresso-core",
    "espresso-contrib",
    "espresso-web",
    "espresso-intents"
]
test-runtime-only = ["junit-jupiter-engine", "junit-vintage-engine"]
powermock = [
    "powermock-junit4",
    "powermock-core",
    "powermock-api"
]

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

navigation = { id = "androidx.navigation.safeargs.kotlin", version.ref = "navigation" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint-gradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
benmanes-versions = { id = "com.github.ben-manes.versions", version.ref = "benmanes" }
# vcu = { id = "nl.littlerobots.version-catalog-update", version.ref = "vcu" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
android-junit5 = { id = "de.mannodermaus.android-junit5", version.ref = "mannodermaus-android-junit5" }
